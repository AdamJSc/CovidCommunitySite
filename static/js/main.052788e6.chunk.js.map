{"version":3,"sources":["components/Resource.js","helpers/formatAddress.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["styles","cardHeader","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","borderBottom","Resource","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callNumber","number","window","open","concat","openLink","link","address","_this2","resource","formattedAddress","name","street","city","postcode","filter","Boolean","join","react_default","a","createElement","Card","style","className","marginBottom","lineHeight","undefined","Button","onClick","bind","alignSelf","marginLeft","Body","index_es","marginRight","icon","faLocationArrow","Title","textTransform","subCategory","description","locale","organisers","length","map","organiser","index","key","role","fontWeight","marginTop","links","url","variant","title","React","Component","defaultProps","Regions","require","Resources","container","border","borderRadius","App","onCategorySelected","category","setState","onRegionSelected","regionId","handleSearchTermChanged","event","searchTerm","target","value","filterResources","resources","filteredResources","toConsumableArray","state","toUpperCase","indexOf","s","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","activeKey","onSelect","Link","active","eventKey","region","Container","fluid","InputGroup","Prepend","Text","faSearch","FormControl","onChange","size","type","placeholder","DropdownButton","as","Append","charAt","slice","Dropdown","Item","components_Resource","react_router","exact","path","render","routerProps","Home","location","hostname","match","ReactDOM","react_router_dom","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.052788e6.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nimport { formatAddress } from '../helpers/formatAddress';\n\nconst styles = {\n\tcardHeader: {\n\t\tbackgroundColor: 'rgba(0,0,0,0.03', \n\t\tpaddingTop: '0.75rem', \n\t\tpaddingBottom: '0.75rem', \n\t\tpaddingLeft: '1.25rem',\n\t\tpaddingRight: '1.25rem',\n\t\tborderBottom: '1px solid rgba(0,0,0,0.13)'\n\t}\n}\n\nclass Resource extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  callNumber = (number) => {\n  \twindow.open(`tel:${number}`);\n  };\n\n  openLink = (link) => {\n  \twindow.open(link, \"_blank\");\n  };\n\n  render() {\n  \tconst { resource } = this.props;\n  \tconst formattedAddress = formatAddress(resource.address);\n    return (\n      <Card style={this.props.style}>\n      \t<div className=\"d-flex flex-row align-items-center justify-content-between\" style={styles.cardHeader}>\n      \t\t<h5 style={{marginBottom: 0, lineHeight: undefined}}>{resource.name}</h5>\n      \t\t{resource.number && (<Button onClick={this.callNumber.bind(this, resource.number)} style={{alignSelf: \"flex-end\", marginLeft: 12}}>{resource.number}</Button>)}\n      \t</div>\n      \t<Card.Body>\n      \t\t<p>\n      \t\t\t<FontAwesomeIcon style={{marginRight: 10}} icon={faLocationArrow}/>\n      \t\t\t{resource.city}\n      \t\t\t{formattedAddress && (\n      \t\t\t\t` - ${formattedAddress}`\n      \t\t\t)}\n      \t\t</p>\n      \t\t<hr/>\n      \t\t<Card.Title style={{textTransform: \"capitalize\"}}>{resource.subCategory}</Card.Title>\n      \t\t{resource.description && (<p>{resource.description[this.props.locale || \"en\"]}</p>)}\n      \t\t{resource.organisers && resource.organisers.length > 0 && (\n      \t\t\tresource.organisers.map((organiser, index) => {\n      \t\t\t\treturn (\n      \t\t\t\t\t<p key={index} style={{marginBottom: 0}}>\n      \t\t\t\t\t\t{organiser.name}\n      \t\t\t\t\t\t{organiser.role && ` - ${organiser.role[this.props.locale || \"en\"]}`}\n      \t\t\t\t\t\t{organiser.number && (\n      \t\t\t\t\t\t\t<span style={{fontWeight: '700'}}>: {'    ' + organiser.number}</span>\n      \t\t\t\t\t\t)}\n      \t\t\t\t\t</p>\n      \t\t\t\t)\n      \t\t\t})\n      \t\t)}\n      \t\t<div style={{marginTop: 12}}>\n      \t\t{resource.links && resource.links.length > 0 && (\n      \t\t\tresource.links.map((link, index) => {\n      \t\t\t\treturn (\n      \t\t\t\t\t<Button key={index} onClick={this.openLink.bind(this, link.url)} variant={\"secondary\"}>{link.title[this.props.locale || \"en\"]}</Button>\n      \t\t\t\t)\n      \t\t\t})\n      \t\t)}\n      \t\t</div>\n      \t</Card.Body>\n      </Card>\n    )\n  }\n}\n\nResource.defaultProps = {\n\n}\n\nResource.propTypes = {\n  resource: PropTypes.any,\n  locale: PropTypes.string\n}\n\nexport default Resource;\n","export function formatAddress(address) {\n\tif (!address) {\n\t\treturn null;\n\t}\n\tvar components = [address.name, address.street, address.city, address.postcode];\n\tvar filteredComponents = components.filter(Boolean);\n\treturn filteredComponents.join(\", \");\n}"," import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport Resource from \"../components/Resource\";\n\nimport { Link } from 'react-router-dom';\n\nconst Regions = require('../constants/regions.json');\nconst Resources = require('../constants/resources.json');\n\nconst capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n\n\nconst styles = {\n  container: {\n    backgroundColor: 'white',\n    border:'2px solid #ececec',\n    borderRadius: 4,\n    marginTop: 20,\n    paddingBottom: 12,\n    paddingTop: 12\n  }\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: null,\n      locale: \"en\",\n      regionId: null,\n      searchTerm: \"\"\n    }\n  }\n\n  onCategorySelected = (category) => {\n    this.setState({\n      category: category == \"_all_\" ? null : category\n    });\n  };\n\n  onRegionSelected = (regionId) => {\n    this.setState({\n      regionId: regionId == \"_all_\" ? null : regionId\n    });\n  };\n\n  handleSearchTermChanged = (event) => {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  };\n\n  filterResources = (resources) => {\n\n    let filteredResources = [...resources];\n    const searchTerm = this.state.searchTerm.toUpperCase();\n\n    filteredResources = filteredResources.filter(resource => {\n      if (this.state.regionId && this.state.regionId != resource.regionId) {\n        return false;\n      }\n      if (this.state.category && this.state.category != resource.category) {\n        return false;\n      }\n      if (!searchTerm || searchTerm === \"\") {\n        return true;\n      }\n      const description = resource.description[this.state.locale];\n      return resource.name.toUpperCase().indexOf(searchTerm) > -1 \n            || (description && description.toUpperCase().indexOf(searchTerm) > -1)\n            || (resource.city && resource.city.toUpperCase().indexOf(searchTerm) > -1)\n            || (resource.category && resource.category.toUpperCase().indexOf(searchTerm)> - 1)\n            || (resource.subCategory && resource.subCategory.toUpperCase().indexOf(searchTerm)> - 1);\n    });\n\n    return filteredResources;\n  }\n\n  render() {\n    const resources = this.filterResources(Resources);\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n          <Navbar.Brand href=\"/\">Ceredigion Resources</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav \n              activeKey={this.state.regionId} \n              className=\"mr-auto\"\n              onSelect={this.onRegionSelected}\n            >\n              <Nav.Link\n                active={!this.state.regionId}\n                eventKey={\"_all_\"}\n              >\n              All\n              </Nav.Link>\n              {Regions.map((region, index) => {\n                return (\n                  <Nav.Link\n                    key={index}\n                    eventKey={region.id}\n                  >\n                    {region.name}\n                  </Nav.Link>\n                )\n              })}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Container style={styles.container} fluid=\"md\">\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>\n                <FontAwesomeIcon icon={faSearch}/>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl value={this.state.searchTerm} onChange={this.handleSearchTermChanged} size=\"lg\" type=\"text\" placeholder=\"Search by name, town, or category\" />\n            <DropdownButton\n              as={InputGroup.Append}\n              onSelect={this.onCategorySelected}\n              title={!!this.state.category ? capitalize(this.state.category) : \"All\"}\n              variant={\"secondary\"}\n            >\n              <Dropdown.Item eventKey={\"_all_\"}>All</Dropdown.Item>\n              <Dropdown.Item eventKey={\"childcare\"}>Childcare</Dropdown.Item>\n              <Dropdown.Item eventKey={\"food\"}>Food</Dropdown.Item>\n            </DropdownButton>\n          </InputGroup>\n        </Container>\n        <Container fluid=\"md\" style={{marginTop: 22}}>\n          {resources.map((resource, index) => {\n            return (\n              <Resource\n                key={index}\n                locale={this.state.locale}\n                resource={resource}\n                style={{marginBottom: 24}}\n              />\n            )\n          })\n        }\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport Home from './pages/Home';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Route exact path={`/`} render={ (routerProps) => <Home routerProps={routerProps} />} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}